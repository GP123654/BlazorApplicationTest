@page "/commingSoon"

@*@inject IJSRuntime JS
@implements IAsyncDisposable
*@

<style>
    /* Set height to 100% for body and html to enable the background image to cover the whole page: */
    .body, html {
        height: 100%;
        margin: 0;
    }


    .container2 {
        width: 100%;
        height: 87vh;        
        background-image: url("images/Flowers3.jpg");
        background-position: center;
        background-size: cover;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 30px;
        font-family: "Courier New", Courier, monospace;
    }


    /* Position text in the top-left corner */
    .topleft {
        position: absolute;
        top: 80px;
        left: 30px;
    }

    /* Position text in the bottom-left corner */
    .bottomleft {
        position: absolute;
        bottom: 0;
        left: 16px;
    }

    /* Position text in the middle */
    .middle {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }

    /* Style the <hr> element */
    hr {
        margin: auto;
        width: 40%;
    }
</style>

<div class="body">
    <div class="container2">
        <div class="topleft">
        <img src="images/Flowers1.jpg" style="height:80px; width:100px;" />
    </div>
    <div class="middle">
        <h1>COMING SOON</h1>
        <hr>
        <p>10 days</p>
    </div>
    <div class="bottomleft">
        <p style="font-size: 22px;">This page will be available to explore soon</p>
    </div>
</div>
</div>



@code {
    //private Lazy<IJSObjectReference> ExampleModule = new();

    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        ExampleModule = new(await JS.InvokeAsync<IJSObjectReference>("import", "~/js/time.js"));
    //    }
    //}

    //public async ValueTask DisposeAsync()
    //{
    //    if (ExampleModule.IsValueCreated)
    //    {
    //        await ExampleModule.Value.DisposeAsync();
    //    }
    //}


}
